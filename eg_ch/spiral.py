# Требуется вывести квадрат, состоящий из N×N клеток, заполненных числами от
# 1 до N2 по спирали (см. примеры).
# # Входные данные
# Программа получает на вход одно число n.
# # Выходные данные
# Программа должна вывести матрицу, заполненную числами от 1 до N2 по спирали,
# при этом между числами может быть любое количество пробелов.
# Не допускается начинать спираль в ином, кроме верхнего левого, углу, з
# акручивать спираль против часовой стрелки или изнутри наружу.

# var_1

n = int(input())
a = [[0] * n for _ in range(n)]
i = 1
x = 0
y = -1
d_row = 0  # -1 0 1
d_column = 1  # -1 0 1
length = len(str(n ** 2))
while i <= n ** 2:
    if 0 <= x + d_row < n and 0 <= y + d_column < n and a[x + d_row][y + d_column] == 0:
        x += d_row
        y += d_column
        a[x][y] = i
        i += 1
    else:
        if d_column == 1:
            d_column = 0
            d_row = 1
        elif d_row == 1:
            d_row = 0
            d_column = -1
        elif d_column == -1:
            d_column = 0
            d_row = -1
        elif d_row == -1:
            d_row = 0
            d_column = 1
# for row in a:
#     for elem in row:
#         print(str(elem).rjust(length), end=' ')
#     print()
for i in a:
    print(*i)


# variant_2

n = int(input()) # ввод размера матрицы
lst = [[0] * n for i in range(n)] # создание нулевой матрицы

i = 0  # i - строка (равен нулю потому, что цикл начинает свой обход с верхней строки)
j = 0  # j - столбец (равен нулю потому, что цикл начинает свой обход с левого столбца)
di = 0  # di - смещениe строки (равен нулю потому, что  обход начинается слева направо в  одной строке)
dj = 1  # dj - смещениe столбца (равен единице потому, что обход начинается  в пределах одной строки слева направо)

for k in range(n**2):  # цикл обходит все ЗНАЧЕНИЯ матрицы-вывода
    lst[i][j] = k + 1  # присваение значения в выбранную ячейку
    if lst[(i + di) % n][(j + dj) % n]:
        """
        Если следующая ячейка равна положительному числу, то выполняется код ниже.
        Деление индекса по остатку на длину матрицы нужно во избежание IndexError,
        когда текущая ячейка явлется последней в своей последовательности(т.е. следующей не существует).
        Тогда этой ячейкой будет являться ранее заполненая(первой ячейкой текущей ряда или столбца).
        """
        di, dj = dj, -di
        """
        происходит изменение вектора движение "курсора" по ЧАСОВОЙ стрелке,
        в этом можно убедиться на примере:
        di = 0 => di = 1 => di = 0  => di = -1 => di = 0    пара вернулась
        dj = 1 => dj = 0 => dj = -1 => dj = 0  => dj = 1    к начальнем значениям
        вправо => вниз   => влево   => вверх   => вправо    это вектор движения
        """
    i = i + di  # строка следующей ячейки
    j = j + dj  # столбец следующей ячейки

for line in lst: # просто вывод готовой матрицы
    print(*line)